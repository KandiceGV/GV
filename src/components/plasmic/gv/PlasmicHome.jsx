// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mzuCRszeeZdCMSdpkmycrs
// Component: 3-XCU9v-YW2v
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Nav from "../../Nav"; // plasmic-import: q5nQYWWL3Xpt/component
import { useScreenVariants as useScreenVariantscWoeu4D18NgU } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CWoeu4d18NgU/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_gv.module.css"; // plasmic-import: mzuCRszeeZdCMSdpkmycrs/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: 3-XCU9v-YW2v/css
import _777ChippngYOzaatEavQF from "./images/_777Chippng.png"; // plasmic-import: yOzaatEavQ_F/picture
import newSlotspng1P7OWD89Yy0 from "./images/newSlotspng.png"; // plasmic-import: 1P7o-wD89yy0/picture
import liveTablespngVhz8JE5TGa7 from "./images/liveTablespng.png"; // plasmic-import: VHZ8J_e5tGA7/picture
import aviatorpng6D6PkLwhbqr from "./images/aviatorpng.png"; // plasmic-import: 6d6PK-lwhbqr/picture
import slotgamespngAhW0NwTuc34U from "./images/slotgamespng.png"; // plasmic-import: ahW0nwTuc34U/picture
import newgamespngLdAs3JfHjSz from "./images/newgamespng.png"; // plasmic-import: ldAs3JF_HJSz/picture
import liveTablesTextpng2ZhtsXtjrRf from "./images/liveTablesTextpng.png"; // plasmic-import: 2ZHTSXtjr-RF/picture
import aviatorspribepng3EsHuwGi8Kkg from "./images/aviatorspribepng.png"; // plasmic-import: 3esHuwGi8KKG/picture
import grandpng2WfRnZvWhXv5 from "./images/grandpng2.png"; // plasmic-import: wfRn-zvWHXv5/picture
import majorornamentpngBbFhQVirgbs from "./images/majorornamentpng.png"; // plasmic-import: _bbFhQVirgbs/picture
import minorpngVei898MEgnN from "./images/minorpng.png"; // plasmic-import: Vei898-mEgnN/picture
import minipng8ROhTd992RlW from "./images/minipng.png"; // plasmic-import: 8ROhTD992RlW/picture
import smallgoldframepngAjBDsXlgJ0T from "./images/smallgoldframepng.png"; // plasmic-import: ajBDsXLG_j0T/picture

createPlasmicElementProxy;

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

function PlasmicHome__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx, $refs]
  );

  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscWoeu4D18NgU()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"home"}
          data-plasmic-override={overrides.home}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.home
          )}
        >
          <Nav
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            className={classNames("__wab_instance", sty.nav)}
          />

          <section
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <div
              data-plasmic-name={"chips"}
              data-plasmic-override={overrides.chips}
              className={classNames(projectcss.all, sty.chips)}
            >
              <div
                data-plasmic-name={"slots"}
                data-plasmic-override={overrides.slots}
                className={classNames(projectcss.all, sty.slots)}
              >
                <p.PlasmicImg
                  data-plasmic-name={"slotschip"}
                  data-plasmic-override={overrides.slotschip}
                  alt={""}
                  className={classNames(sty.slotschip)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100px"
                      : "150px"
                  }
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToSlots"] = true
                      ? (() => {
                          const actionArgs = { destination: `/slots` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToSlots"] === "object" &&
                      typeof $steps["goToSlots"].then === "function"
                    ) {
                      $steps["goToSlots"] = await $steps["goToSlots"];
                    }
                  }}
                  src={{
                    src: _777ChippngYOzaatEavQF,
                    fullWidth: 685,
                    fullHeight: 685,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"_new"}
                data-plasmic-override={overrides._new}
                className={classNames(projectcss.all, sty._new)}
              >
                <p.PlasmicImg
                  data-plasmic-name={"newgameschip"}
                  data-plasmic-override={overrides.newgameschip}
                  alt={""}
                  className={classNames(sty.newgameschip)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100px"
                      : "150px"
                  }
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToNewGames"] = true
                      ? (() => {
                          const actionArgs = { destination: `/new-games` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToNewGames"] === "object" &&
                      typeof $steps["goToNewGames"].then === "function"
                    ) {
                      $steps["goToNewGames"] = await $steps["goToNewGames"];
                    }
                  }}
                  src={{
                    src: newSlotspng1P7OWD89Yy0,
                    fullWidth: 475,
                    fullHeight: 475,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"livetables"}
                data-plasmic-override={overrides.livetables}
                className={classNames(projectcss.all, sty.livetables)}
              >
                <p.PlasmicImg
                  data-plasmic-name={"livetableschip"}
                  data-plasmic-override={overrides.livetableschip}
                  alt={""}
                  className={classNames(sty.livetableschip)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100px"
                      : "150px"
                  }
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToLiveGames"] = true
                      ? (() => {
                          const actionArgs = { destination: `/live-games` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToLiveGames"] === "object" &&
                      typeof $steps["goToLiveGames"].then === "function"
                    ) {
                      $steps["goToLiveGames"] = await $steps["goToLiveGames"];
                    }
                  }}
                  src={{
                    src: liveTablespngVhz8JE5TGa7,
                    fullWidth: 485,
                    fullHeight: 485,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"aviatorspribe"}
                data-plasmic-override={overrides.aviatorspribe}
                className={classNames(projectcss.all, sty.aviatorspribe)}
              >
                <p.PlasmicImg
                  data-plasmic-name={"aviatorchip"}
                  data-plasmic-override={overrides.aviatorchip}
                  alt={""}
                  className={classNames(sty.aviatorchip)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100px"
                      : "150px"
                  }
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToAviatorSpribe"] = true
                      ? (() => {
                          const actionArgs = { destination: `/aviator-spribe` };
                          return (({ destination }) => {
                            location.assign(destination);
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      typeof $steps["goToAviatorSpribe"] === "object" &&
                      typeof $steps["goToAviatorSpribe"].then === "function"
                    ) {
                      $steps["goToAviatorSpribe"] = await $steps[
                        "goToAviatorSpribe"
                      ];
                    }
                  }}
                  src={{
                    src: aviatorpng6D6PkLwhbqr,
                    fullWidth: 480,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"chipTitles"}
              data-plasmic-override={overrides.chipTitles}
              className={classNames(projectcss.all, sty.chipTitles)}
            >
              <div
                data-plasmic-name={"slots2"}
                data-plasmic-override={overrides.slots2}
                className={classNames(projectcss.all, sty.slots2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__m4JJt)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "65px"
                      : "100px"
                  }
                  loading={"lazy"}
                  src={{
                    src: slotgamespngAhW0NwTuc34U,
                    fullWidth: 1225,
                    fullHeight: 859,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"new2"}
                data-plasmic-override={overrides.new2}
                className={classNames(projectcss.all, sty.new2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__f6B2L)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "65px"
                      : "100px"
                  }
                  loading={"lazy"}
                  src={{
                    src: newgamespngLdAs3JfHjSz,
                    fullWidth: 1225,
                    fullHeight: 858,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"livetables2"}
                data-plasmic-override={overrides.livetables2}
                className={classNames(projectcss.all, sty.livetables2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__x9XnK)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "65px"
                      : "100px"
                  }
                  loading={"lazy"}
                  src={{
                    src: liveTablesTextpng2ZhtsXtjrRf,
                    fullWidth: 1603,
                    fullHeight: 1187,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"aviatorspribe2"}
                data-plasmic-override={overrides.aviatorspribe2}
                className={classNames(projectcss.all, sty.aviatorspribe2)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xLb6S)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "65px"
                      : "100px"
                  }
                  loading={"lazy"}
                  src={{
                    src: aviatorspribepng3EsHuwGi8Kkg,
                    fullWidth: 1416,
                    fullHeight: 959,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"homenav"}
            data-plasmic-override={overrides.homenav}
            className={classNames(projectcss.all, sty.homenav)}
          />

          <section
            data-plasmic-name={"mainbody"}
            data-plasmic-override={overrides.mainbody}
            className={classNames(projectcss.all, sty.mainbody)}
          >
            <div
              data-plasmic-name={"grandjackpot"}
              data-plasmic-override={overrides.grandjackpot}
              className={classNames(projectcss.all, sty.grandjackpot)}
            >
              <div
                data-plasmic-name={"grand"}
                data-plasmic-override={overrides.grand}
                className={classNames(projectcss.all, sty.grand)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___5Rl9)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "200px"
                      : "500px"
                  }
                  loading={"lazy"}
                  src={{
                    src: grandpng2WfRnZvWhXv5,
                    fullWidth: 595,
                    fullHeight: 196,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wjWd
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"GRAND JACKPOT"}
                    </span>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__a6KlD
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"1234569 GVK"}
                    </span>
                  </React.Fragment>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"majorminormini"}
              data-plasmic-override={overrides.majorminormini}
              className={classNames(projectcss.all, sty.majorminormini)}
            >
              <div
                data-plasmic-name={"major"}
                data-plasmic-override={overrides.major}
                className={classNames(projectcss.all, sty.major)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__t7WE0)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "106px"
                      : "auto"
                  }
                  loading={"lazy"}
                  src={{
                    src: majorornamentpngBbFhQVirgbs,
                    fullWidth: 372,
                    fullHeight: 160,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uJt37
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "MAJOR"
                    : "MAJOR JACKPOT"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kgzLq
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"4564 GVK"}
                    </span>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"minor"}
                data-plasmic-override={overrides.minor}
                className={classNames(projectcss.all, sty.minor)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__guPjj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: minorpngVei898MEgnN,
                    fullWidth: 375,
                    fullHeight: 170,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nJdEf
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"MINOR "}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"MINOR JACKPOT"}
                      </span>
                    </React.Fragment>
                  )}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vyhnm
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"789 GVK"}
                    </span>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"mini"}
                data-plasmic-override={overrides.mini}
                className={classNames(projectcss.all, sty.mini)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__u9Ecz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: minipng8ROhTd992RlW,
                    fullWidth: 377,
                    fullHeight: 164,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__h948X
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"MINI "}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"MINI JACKPOT"}
                      </span>
                    </React.Fragment>
                  )}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lEpcl
                  )}
                >
                  {"51 GVK"}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"gamecontainers"}
              data-plasmic-override={overrides.gamecontainers}
              className={classNames(projectcss.all, sty.gamecontainers)}
            >
              <div className={classNames(projectcss.all, sty.column__sxZtQ)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___8KOsJ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: smallgoldframepngAjBDsXlgJ0T,
                    fullWidth: 678,
                    fullHeight: 392,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__wNuK3)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__tu8M)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: smallgoldframepngAjBDsXlgJ0T,
                    fullWidth: 678,
                    fullHeight: 392,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___4QuTf)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lyzSu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: smallgoldframepngAjBDsXlgJ0T,
                    fullWidth: 678,
                    fullHeight: 392,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__aEco)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__vJJe6)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: smallgoldframepngAjBDsXlgJ0T,
                    fullWidth: 678,
                    fullHeight: 392,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__vaN9I)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__lyAR)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: smallgoldframepngAjBDsXlgJ0T,
                    fullWidth: 678,
                    fullHeight: 392,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </section>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  home: [
    "home",
    "nav",
    "header",
    "chips",
    "slots",
    "slotschip",
    "_new",
    "newgameschip",
    "livetables",
    "livetableschip",
    "aviatorspribe",
    "aviatorchip",
    "chipTitles",
    "slots2",
    "new2",
    "livetables2",
    "aviatorspribe2",
    "homenav",
    "mainbody",
    "grandjackpot",
    "grand",
    "majorminormini",
    "major",
    "minor",
    "mini",
    "gamecontainers"
  ],

  nav: ["nav"],
  header: [
    "header",
    "chips",
    "slots",
    "slotschip",
    "_new",
    "newgameschip",
    "livetables",
    "livetableschip",
    "aviatorspribe",
    "aviatorchip",
    "chipTitles",
    "slots2",
    "new2",
    "livetables2",
    "aviatorspribe2"
  ],

  chips: [
    "chips",
    "slots",
    "slotschip",
    "_new",
    "newgameschip",
    "livetables",
    "livetableschip",
    "aviatorspribe",
    "aviatorchip"
  ],

  slots: ["slots", "slotschip"],
  slotschip: ["slotschip"],
  _new: ["_new", "newgameschip"],
  newgameschip: ["newgameschip"],
  livetables: ["livetables", "livetableschip"],
  livetableschip: ["livetableschip"],
  aviatorspribe: ["aviatorspribe", "aviatorchip"],
  aviatorchip: ["aviatorchip"],
  chipTitles: ["chipTitles", "slots2", "new2", "livetables2", "aviatorspribe2"],
  slots2: ["slots2"],
  new2: ["new2"],
  livetables2: ["livetables2"],
  aviatorspribe2: ["aviatorspribe2"],
  homenav: ["homenav"],
  mainbody: [
    "mainbody",
    "grandjackpot",
    "grand",
    "majorminormini",
    "major",
    "minor",
    "mini",
    "gamecontainers"
  ],

  grandjackpot: ["grandjackpot", "grand"],
  grand: ["grand"],
  majorminormini: ["majorminormini", "major", "minor", "mini"],
  major: ["major"],
  minor: ["minor"],
  mini: ["mini"],
  gamecontainers: ["gamecontainers"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "home") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("home"),
  {
    // Helper components rendering sub-elements
    nav: makeNodeComponent("nav"),
    header: makeNodeComponent("header"),
    chips: makeNodeComponent("chips"),
    slots: makeNodeComponent("slots"),
    slotschip: makeNodeComponent("slotschip"),
    _new: makeNodeComponent("_new"),
    newgameschip: makeNodeComponent("newgameschip"),
    livetables: makeNodeComponent("livetables"),
    livetableschip: makeNodeComponent("livetableschip"),
    aviatorspribe: makeNodeComponent("aviatorspribe"),
    aviatorchip: makeNodeComponent("aviatorchip"),
    chipTitles: makeNodeComponent("chipTitles"),
    slots2: makeNodeComponent("slots2"),
    new2: makeNodeComponent("new2"),
    livetables2: makeNodeComponent("livetables2"),
    aviatorspribe2: makeNodeComponent("aviatorspribe2"),
    homenav: makeNodeComponent("homenav"),
    mainbody: makeNodeComponent("mainbody"),
    grandjackpot: makeNodeComponent("grandjackpot"),
    grand: makeNodeComponent("grand"),
    majorminormini: makeNodeComponent("majorminormini"),
    major: makeNodeComponent("major"),
    minor: makeNodeComponent("minor"),
    mini: makeNodeComponent("mini"),
    gamecontainers: makeNodeComponent("gamecontainers"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Home",
      description:
        "Widest selection of online casino games in South Africa. EGT, Novomatic, Aristocat and much more. International standard. Slots. Live Dealers. Big winners!",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
